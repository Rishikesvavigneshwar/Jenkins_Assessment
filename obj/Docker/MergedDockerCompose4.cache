name: dockercompose9380205403233390720
services:
  backend:
    build:
      context: D:\Asp\Docker Training\DockerTesting\Campus_EventAggregator\CampusEventAggregator
      dockerfile: Dockerfile
    container_name: dotnet_api
    depends_on:
      mysql:
        condition: service_started
        required: true
    environment:
      ConnectionStrings__DefaultConnection: Server=mysql;Port=3306;Database=campusdb;User=root;Password=12345;
    networks:
      default: null
    ports:
      - mode: ingress
        target: 5000
        published: "5001"
        protocol: tcp
  campuseventaggregator:
    build:
      context: D:\Asp\Docker Training\DockerTesting\Campus_EventAggregator
      dockerfile: Dockerfile
      args:
        BUILD_CONFIGURATION: Debug
        LAUNCHING_FROM_VS: "true"
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: CampusEventAggregator
      target: build
    entrypoint:
      - dotnet
      - --roll-forward
      - Major
      - /VSTools/DistrolessHelper/DistrolessHelper.dll
      - --wait
    environment:
      ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS: "true"
      DOTNET_USE_POLLING_FILE_WATCHER: "1"
      NUGET_FALLBACK_PACKAGES: /.nuget/fallbackpackages
    image: campuseventaggregator:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /.nuget/packages --additionalProbingPath /.nuget/fallbackpackages  "/app/bin/Debug/net8.0/CampusEventAggregator.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: dotnet --roll-forward Major /VSTools/DistrolessHelper/DistrolessHelper.dll --stop dotnet
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      default: null
    tty: true
    volumes:
      - type: bind
        source: D:\Asp\Docker Training\DockerTesting\Campus_EventAggregator\CampusEventAggregator
        target: /app
        bind:
          create_host_path: true
      - type: bind
        source: D:\Asp\Docker Training\DockerTesting\Campus_EventAggregator
        target: /src
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\rishi.manisekaran\vsdbg\vs2017u5
        target: /remote_debugger
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\rishi.manisekaran\.nuget\packages
        target: /.nuget/packages
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files (x86)\Microsoft Visual Studio\Shared\NuGetPackages
        target: /.nuget/fallbackpackages
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\rishi.manisekaran\AppData\Roaming\ASP.NET\Https
        target: /root/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\rishi.manisekaran\AppData\Roaming\ASP.NET\Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\rishi.manisekaran\AppData\Roaming\Microsoft\UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\rishi.manisekaran\AppData\Roaming\Microsoft\UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Professional\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\linux-x64\net8.0
        target: /VSTools
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Professional\Common7\IDE\CommonExtensions\Microsoft\HotReload
        target: /HotReloadAgent
        read_only: true
        bind:
          create_host_path: true
  mysql:
    container_name: mysql_db
    environment:
      MYSQL_DATABASE: campusdb
      MYSQL_ROOT_PASSWORD: "12345"
    image: mysql:8.0
    networks:
      default: null
    ports:
      - mode: ingress
        target: 3306
        published: "3307"
        protocol: tcp
    volumes:
      - type: volume
        source: mysql_data
        target: /var/lib/mysql
        volume: {}
networks:
  default:
    name: dockercompose9380205403233390720_default
volumes:
  mysql_data:
    name: dockercompose9380205403233390720_mysql_data